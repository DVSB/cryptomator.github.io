"use strict";const STRIPE_PK='pk_live_eSasX216vGvC26GdbVwA011V';const STRIPE_PLANS={'EUR':'plan_GgW4ovr7c6upzx','USD':'plan_GgW49BkhumHMIR'};const RECAPTCHA_SITEKEY='6LfbD3sUAAAAAMEH2DZWFtyDOS5TXB38fj85coqv';class OneTimePayment{constructor(status){this._status=status;}
initStripeField(placeholder,placeholderLoading,languageCode){let cardElement=document.createElement('div');$(cardElement).hide();$(placeholder).after(cardElement);$(placeholder).attr('placeholder',placeholderLoading);$(placeholder).attr('disabled',true);this._stripe=$.ajax({url:'https://js.stripe.com/v3/',cache:true,dataType:'script'}).then(response=>{return window.Stripe(STRIPE_PK);});this._card=this._stripe.then(stripe=>{let card=stripe.elements({locale:languageCode}).create('card',{style:{base:{fontFamily:'Open Sans, sans-serif',fontSize:'16px',lineHeight:'1.5'}}});card.mount(cardElement);card.on('ready',event=>{$(cardElement).show();$(placeholder).hide();card.focus();});card.on('change',this.onCardChanged.bind(this));return card;});}
onCardChanged(event){this._status.validCardNum=event.complete;if(event.error){this._status.errorMessage=event.error.message;}else{this._status.errorMessage='';}}
loadRecaptcha(wrapper){window.grecaptchaCallback=()=>{$(wrapper).empty();grecaptcha.render(wrapper,{'sitekey':RECAPTCHA_SITEKEY,'data-size':'compact','callback':(captcha)=>this._status.captcha=captcha});}
$.getScript("https://www.google.com/recaptcha/api.js?onload=grecaptchaCallback&render=explicit");}
charge(amount,currency){this._status.inProgress=true;this._status.errorMessage='';this._status.success=false;Promise.all([this._stripe,this._card]).then(([stripe,card])=>{stripe.createPaymentMethod('card',card).then(result=>{if(result.error){this.onPaymentFailed(result.error.message);}else{this.chargeWithPaymentId(result.paymentMethod.id,amount,currency);}});});}
chargeWithPaymentId(paymentMethodId,amount,currency){$.ajax({url:'https://api.cryptomator.org/stripe/charge_creditcard.php',type:'POST',data:{payment_method_id:paymentMethodId,currency:currency,amount:amount,frequency:'once',captcha:this._status.captcha}}).done(data=>{if(data.status=='ok'){this.onPaymentSucceeded();}else if(data.status=='requires_action'&&data.confirmation_method=='manual'){this.manuallyConfirmPayment(data.payment_intent_client_secret);}else if(data.status=='requires_action'&&data.confirmation_method=='automatic'){this.automaticallyConfirmPayment(data.payment_intent_client_secret,data.payment_method);}else{this.onPaymentFailed(response.error);}}).fail(xhr=>{this.onPaymentFailed(xhr.responseJSON.error);});}
chargeWithPaymentIntendId(paymentIntendId){$.ajax({url:'https://api.cryptomator.org/stripe/charge_creditcard.php',type:'POST',data:{payment_intent_id:paymentIntendId}}).done(data=>{if(data.status=='ok'){this.onPaymentSucceeded();}else{this.onPaymentFailed(data.error);}}).fail(xhr=>{this.onPaymentFailed(xhr.responseJSON.error);});}
manuallyConfirmPayment(paymentIntendClientSecret){this._stripe.then(stripe=>{stripe.handleCardAction(paymentIntendClientSecret).then(result=>{if(result.error){this.onPaymentFailed(result.error.message);}else{this.chargeWithPaymentIntendId(result.paymentIntent.id);}});});}
automaticallyConfirmPayment(paymentIntendClientSecret,paymentMethod){this._stripe.then(stripe=>{stripe.handleCardPayment(paymentIntendClientSecret,{payment_method:paymentMethod}).then(result=>{if(result.error){this.onPaymentFailed(result.error.message);}else{this.chargeWithPaymentIntendId(result.paymentIntent.id);}});});}
onPaymentFailed(error){this._status.success=false;this._status.errorMessage=error;this._status.inProgress=false;if(grecaptcha){this._status.captcha='';grecaptcha.reset();}}
onPaymentSucceeded(){this._status.success=true;this._status.errorMessage='';this._status.inProgress=false;if(grecaptcha){this._status.captcha='';grecaptcha.reset();}}}
class RecurringPayment{checkout(amount,currency){let plan=STRIPE_PLANS[currency];$.ajax({url:'https://js.stripe.com/v3/',cache:true,dataType:'script'}).then(response=>{return window.Stripe(STRIPE_PK);}).then(stripe=>{stripe.redirectToCheckout({items:[{plan:plan,quantity:parseInt(amount)}],successUrl:window.location.href+'/thanks',cancelUrl:window.location.href}).then(result=>{if(result.error){console.log(result.error.message);}});});}}